$(function() {

  var config = getConfig();

  var editor = null;

   // Connect to GitHub as AzureDocsBot
  var github = new Github({
    token: config.githubOAuthToken,
    auth: "oauth"
  });

  var azureContentGithubRepo = github.getRepo("Azure", "azure-content");

  // ASSUMPTION: the Azure azure-content github repo has already been forked into the bot's github account, so that we can easily create branches from it.
  var azureDocsBotGithubRepo = github.getRepo(config.githubUsername, "azure-content");

  var editLink = $(".contribute a");
  var articleContentDiv = $(".wa-content.wa-content-article");

  var articleEditorDiv = $("<div class='wa-content' />");
  articleEditorDiv.append($("<h4>Edit this page's content as markdown, and submit your suggested edits when done.</h4>"));

  var progressBarElement = $("<div />").progressbar({
    value: 0
  }).hide();
  var progressBarLabel = progressBarElement.find(".ui-progressbar-value");

  articleEditorDiv.append(progressBarElement);

  articleEditorDiv.append(createEditModeButton("Full Screen", function() {
    editor.enterFullscreen();
  }));

  articleEditorDiv.append(createEditModeButton("Preview Mode", function() {
    editor.preview();
  }));

  articleEditorDiv.append(createEditModeButton("Edit Mode", function() {
    editor.edit();
  }));

  articleEditorDiv.append(createEditModeButton("Submit Edits", function() {
    submitEdits();
  }));

  articleEditorDiv.append(createEditModeButton("Cancel", function() {
    switchToReadMode();
  }));
  
  articleEditorDiv.append($("<div id='articleEditor' style='height: 350px' />"));

  var articleGithubLocation = editLink.attr("href");
  var pathToArticleInGithubRepository = articleGithubLocation.split("/master/")[1];
    
  function setUpPage() {

    editLink.text("Suggest an edit");
    editLink.attr("href", "#");
    editLink.attr("target", "");
    editLink.click(switchToEditMode);

    articleContentDiv.after(articleEditorDiv);

    azureContentGithubRepo.read("master", pathToArticleInGithubRepository, function(err, data) {
      
      if(err) {
        showError(err);
      }
      else {

        editor = new EpicEditor({
          container: 'articleEditor',
          basePath: chrome.extension.getURL("resources/epiceditor/themes"),
          clientSideStorage: false,
          file: {
            defaultContent: data,
            autoSave: false
          },
          theme: {
            base: '/base/epiceditor.css',
            preview: '/preview/github.css',
            editor: '/editor/epic-light.css'
          },
          button: {
            preview: true,
            fullscreen: true,
            bar: "show"
          },
          autogrow: false,
          focusOnLoad: true
        });

      }

    });
  }

  function switchToEditMode() {
    articleContentDiv.fadeOut(function() {
      editor.load();
    });
  }

  function switchToReadMode() {
    editor.unload();
    articleContentDiv.fadeIn();
  }

  function createEditModeButton(buttonText, onClick) {
    var buttonElement = $('<a href="#" class="wa-button wa-button-mini wa-button-W01">' + buttonText + '</a>');
    buttonElement.click(onClick);

    return buttonElement;
  }

  function submitEdits() {
    var newBranchName = "suggested-edits-to-" + pathToArticleInGithubRepository + "-" + new Date().getTime();
    var newContent = editor.getElement('editor').body.innerText;

    updateProgressBar(25, "Creating GitHub branch...");

    // create a new branch for this suggestion
    azureDocsBotGithubRepo.branch(newBranchName, function(err) {
      if(err) {
        showError(err);
      }
      else {
        
        updateProgressBar(50, "Committing changes to GitHub branch...");
        
        // commit the suggested changes to the new branch
        azureDocsBotGithubRepo.write(newBranchName, pathToArticleInGithubRepository, unescape(encodeURIComponent(newContent)), ("Update " + pathToArticleInGithubRepository), function(err) {
          if(err) {
            showError(err);
          }
          else {
            
            updateProgressBar(75, "Creating GitHub pull request...");
            
            var pull = {
              title: ("Suggested edits for Azure article " + pathToArticleInGithubRepository.replace("articles/","")),
              body: "This pull request was automatically generated by AzureDocs EasyEdit (https://chrome.google.com/webstore/detail/azuredocs-easyedit/eelkilbnmcebmopkfdakoghphajdlinb).",
              base: "master",
              head: config.githubUsername + ":" + newBranchName
            };

            // issue a pull request for the suggested changes to the original repo
            azureContentGithubRepo.createPullRequest(pull, function(err, pullRequest) {
              if(err) {
                showError(err);
              }
              else {
                var submittedPullRequestId = pullRequest.number;

                updateProgressBar(0, "");
                progressBarElement.hide();

                switchToReadMode();
    
                $(".wa-content.wa-content-article ").prepend($("<div style='font-weight: bold'>Suggested edits submitted! <a href='https://github.com/Azure/azure-content/pull/" + submittedPullRequestId + "' target='_blank'>Pull request " + submittedPullRequestId + "</a></div><br />"));

                // delete the repo to clean up
                /*azureDocsBotGithubRepo.deleteRepo(function(err, res) {
                  if(err) {
                    showError(err);
                  }
                });*/
              }
            });

          }
        });
      }
    });
  }

  function showError(err) {
    alert(JSON.stringify(err));
    progressBarElement.hide();
  }

  function updateProgressBar(percentage, text) {
    progressBarElement.show();
    progressBarElement.progressbar("value", percentage);
    progressBarLabel.text(text);
  }

  setUpPage();

});